##################################
이벤트 처리하기

공식문서 : https://ko.reactjs.org/docs/handling-events.html

React의 이벤트는 소문자 대신 캐멀 케이스(camelCase)를 사용합니다.
JSX를 사용하여 문자열이 아닌 함수로 이벤트 핸들러를 전달합니다.

HTML 예시
<button onclick="activateLasers()">
  Activate Lasers
</button>

React 예시
<button onClick={activateLasers}>
  Activate Lasers
</button>

함수를 카멜케이스로 함수의 이름을 그대로 넘겨준다.

이런 문법적인 차이가 있다.

또 다른 차이점으로, React에서는 false를 반환해도 기본 동작을 방지할 수 없습니다. 
반드시 preventDefault를 명시적으로 호출해야 합니다. 

function Form() {
  function handleSubmit(e) {
    e.preventDefault();
    console.log('You clicked submit.');
  }

  return (
    <form onSubmit={handleSubmit}>
      <button type="submit">Submit</button>
    </form>
  );
}

form에 기본적인 동작이 넘어가는 것을 방지할 수 있다.

합성이벤트(SyntheticEvent)
리액트는 UI 라이브러리 이다 그렇기 때문에 DOM 내에 있는 이벤트를 다룰 수 있어야 한다.

React를 사용할 때 DOM 엘리먼트가 생성된 후 리스너를 추가하기 위해 addEventListener를 호출할 필요가 없습니다. 
대신, 엘리먼트가 처음 렌더링될 때 리스너를 제공하면 됩니다.