#############################################################################################
##리액트란?

사용자 인터페이스를 만들기 위한 JavaScript 라이브러리
User Interface UI : 사용자와 컴퓨터 프로그램 사이에서 의사소통을 할 수 있는 화면

라이브러리 : 프로그램을 만들기 위한 기능들의 집합

프래임워크 : 복잡한 문제를 해결하거나 서술하는 데 사용되는 기본 개념 구조이다. 뼈대, 골조, 프레임워크라고도 한다.

## 라이브러리 프레임워크 차이점
라이브러리는 기능들의 집합 
프레임워크는 개발에 있어 필요한 구조와 기능을 제공하여 개발자가 특정 규칙 아래에서 개발을 하도록 강제하는 강제성이 있다.
리엑트는 라이브러리로 이러한 코드들의 강제성이 없고 개발자가 원하는대로 프로젝트 구조나 코드를 작성할 수 있다.

## 리액트를 사용하는 이유?

Vanila JS : 순수하게 자바스크립트만을 이용해 개발한 것
Markup : HTML 언어로 정적인 화면을 구성하는 것
Rendering : 웹 브라우저에서 읽어들인 웹 문서(HTML, CSS, JS)를 웹 표준에 맞도록, 화면에 적절히 그려내는 것

리액트로 짠 코드는 바닐라로 짠 코드보다 개발자가 직접적으로 신경써야하는 점이 적다.
리액트를 사용하면 dom을 직접 접근하고 수정할일이 적어진다. 개발자는 로직에만 집중하여 코딩할 수 있다.
규모가 큰 프로젝트에서 코드양이 많아지면 직접적으로 신경써야할 요소가 적어진다.

## 리액트 특징
1. 선언형(Declarative)
무엇을 어떻게 할지가 아닌 무엇을 하고싶은지에 초점을 맞춰 개발하는 프로그래밍 방법.

<->

명령형(Imperative)
무엇을 어떻게 할지를 구문의 관점에서 연산을 설명하는 프로그래밍 방법

리액트는 선연형이다.

리엑트는 개발자가 무엇을 할지 집중하여 뷰를 개발할 수 있게 데이터를 기반으로 뷰를 적절히 효율적으로 랜더링해준다.

2. 컴포넌트 기반
컴포넌트 : 리액트로 개발된 앱을 이루고 있는 함수 단위의 코드이다. UI만을 그리는 행위를 할 수 있고 상태를 가지고 UI를 동적으로 그릴 수 있다.

## Virtual DOM과 DOM
DOM : HTML문서를 제어하기 위한 일종의 인터페이스이다. 문서 내의 요소를 정의하고, 각 요소의 접근하는 방법을 제공한다.

virtual dom?
리액트에서 좀 더 효율적인 화면 렌더링을 위해 구성된 기술 패턴이다.
요소 단위의 수정을 반영하는게 아닌 변화를 감지하고 한번에 DOM에 수정된 사항을 적용한다.
일반적으로 DOM은 수정이 일어나면 화면을 다시 그리기 위해 랜더링을 위한 랜더트리를 다시 생성한다.

Virtual DOM이 없이 갱신시 요소가 바뀌면 Render Tree를 다시 그린다. 그럼 요소가 바뀔때 마다 반복하게 된다. 비효율적이다.
이를 방지하게 virtual dom을 이용해 모든 업데이트가 끝나면 한번에 적용된다.

리액트는 State 기반 렌더링이다.
State가 바뀌면 Virtual DOM이 수정되고 Virtual DOM은 DOM과 비교하면서 변경된 부분을 반영한다.


node.js
- chrome의 v8 JS 엔진으로 빌드된 JS 런타임
런타임 : 프로그램을 실행할 수 있는 환경

JS언어로 서버를 구성, 웹 서버로도 이용

Package Manager
패키지를 관리해주는 툴
프로젝트를 진행하는데 필요한 패키지들을
효과적으로 설치, 업데이트, 삭제 할 수 있도록 도와주는 도구

package manager 종류 -> npm, yarn

npm :
node의 기본 설치 패키지 매니저. 
가장 쉽게 접근 할 수 있는 패키지 매니저

yarn : 
페이스북에서 만든 패키지 매니저 
npm에는 없는 workspace 등 추가적인 기능 제공 
초기에는 npm보다 빠른 속도를 자랑했으나 현재는 비등



CRA  = Create React App
리액트를 개발하기 위한 여러 설정들을 미리 작성해놓은 작업 환경 구축해주는 템플릿

Babel : JSX, JS 최신 문법 처리를 위한 트랜스 파일러
Webpack : 코드를 묶고, 로더들을 연결해주고 배포 전 전처리를 위한 번들러
Loader : CSS,Sass,Image 리소스등을 처리하기 위한 각종 로더

실무에서는 CRA없이 개발환경을 구축해야한다.

